[struct, struct, 1] [id, A, 1] [lcurbr, {, 1] 
[private, private, 2] [let, let, 2] [id, a, 2] [colon, :, 2] [float, float, 2] [semi, ;, 2] 
[public, public, 3] [func, func, 3] [id, evaluate, 3] [lpar, (, 3] [id, x, 3] [colon, :, 3] [float, float, 3] [rpar, ), 3] [arrow, ->, 3] [float, float, 3] [semi, ;, 3] 
[rcurbr, }, 4] [semi, ;, 4] 
[struct, struct, 5] [id, B, 5] [inherits, inherits, 5] [id, A, 5] [lcurbr, {, 5] 
[public, public, 6] [let, let, 6] [id, a, 6] [colon, :, 6] [float, float, 6] [semi, ;, 6] 
[rcurbr, }, 7] [semi, ;, 7] 

[impl, impl, 9] [id, A, 9] [lcurbr, {, 9] 
[func, func, 10] [id, evaluate, 10] [lpar, (, 10] [id, x, 10] [colon, :, 10] [float, float, 10] [rpar, ), 10] [arrow, ->, 10] [float, float, 10] 
[lcurbr, {, 11] 
[let, let, 12] [id, a, 12] [colon, :, 12] [float, float, 12] [semi, ;, 12] 
[let, let, 13] [id, c, 13] [colon, :, 13] [float, float, 13] [semi, ;, 13] 
[return, return, 14] [lpar, (, 14] [intlit, 0, 14] [rpar, ), 14] [semi, ;, 14] 
[rcurbr, }, 15] 
[func, func, 16] [id, evaluate, 16] [lpar, (, 16] [id, x, 16] [colon, :, 16] [float, float, 16] [rpar, ), 16] [arrow, ->, 16] [float, float, 16] 
[lcurbr, {, 17] 
[let, let, 18] [id, a, 18] [colon, :, 18] [float, float, 18] [semi, ;, 18] 
[let, let, 19] [id, c, 19] [colon, :, 19] [float, float, 19] [semi, ;, 19] 
[return, return, 20] [lpar, (, 20] [intlit, 0, 20] [rpar, ), 20] [semi, ;, 20] 
[rcurbr, }, 21] 
[rcurbr, }, 22] 

[func, func, 24] [id, main, 24] [lpar, (, 24] [id, A, 24] [colon, :, 24] [float, float, 24] [comma, ,, 24] [id, B, 24] [colon, :, 24] [float, float, 24] [rpar, ), 24] [arrow, ->, 24] [void, void, 24] [lcurbr, {, 24] 
[let, let, 25] [id, a, 25] [colon, :, 25] [float, float, 25] [semi, ;, 25] 
[let, let, 26] [id, a, 26] [colon, :, 26] [float, float, 26] [semi, ;, 26] 
[let, let, 27] [id, b, 27] [colon, :, 27] [float, float, 27] [semi, ;, 27] 
[rcurbr, }, 28] 

[func, func, 30] [id, main, 30] [lpar, (, 30] [id, A, 30] [colon, :, 30] [float, float, 30] [comma, ,, 30] [id, B, 30] [colon, :, 30] [float, float, 30] [rpar, ), 30] [arrow, ->, 30] [void, void, 30] 
[lcurbr, {, 31] 
[let, let, 32] [id, f1, 32] [colon, :, 32] [id, LINEAR, 32] [semi, ;, 32] 
[let, let, 33] [id, f2, 33] [colon, :, 33] [id, QUADRATIC, 33] [semi, ;, 33] 
[let, let, 34] [id, counter, 34] [colon, :, 34] [integer, integer, 34] [semi, ;, 34] 
[id, f1, 35] [equal, =, 35] [id, f1, 35] [dot, ., 35] [id, build, 35] [lpar, (, 35] [intlit, 2, 35] [comma, ,, 35] [floatlit, 3.5, 35] [rpar, ), 35] [semi, ;, 35] 
[id, f2, 36] [equal, =, 36] [id, f2, 36] [dot, ., 36] [id, build, 36] [lpar, (, 36] [minus, -, 36] [floatlit, 2.0, 36] [comma, ,, 36] [floatlit, 1.0, 36] [comma, ,, 36] [floatlit, 0.0, 36] [rpar, ), 36] [semi, ;, 36] 
[id, counter, 37] [equal, =, 37] [intlit, 1, 37] [semi, ;, 37] 

[while, while, 39] [lpar, (, 39] [id, counter, 39] [leq, <=, 39] [intlit, 10, 39] [rpar, ), 39] 
[lcurbr, {, 40] 
[write, write, 41] [lpar, (, 41] [id, counter, 41] [rpar, ), 41] [semi, ;, 41] 
[write, write, 42] [lpar, (, 42] [id, f1, 42] [dot, ., 42] [id, evaluate, 42] [lpar, (, 42] [id, counter, 42] [rpar, ), 42] [rpar, ), 42] [semi, ;, 42] 
[write, write, 43] [lpar, (, 43] [id, f2, 43] [dot, ., 43] [id, evaluate, 43] [lpar, (, 43] [id, counter, 43] [rpar, ), 43] [rpar, ), 43] [semi, ;, 43] 
[rcurbr, }, 44] [semi, ;, 44] 
[rcurbr, }, 45] 
